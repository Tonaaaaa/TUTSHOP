@model IEnumerable<TUTSHOP.Models.Entities.Order>

@{
    ViewData["Title"] = "TotalRevenue";

    // Chuyển đổi dữ liệu
    var dailyRevenueLabels = ViewBag.DailyRevenueLabels;
    var dailyRevenueData = ViewBag.DailyRevenueData;

    var monthlyRevenueLabels = ViewBag.MonthlyRevenueLabels;
    var monthlyRevenueData = ViewBag.MonthlyRevenueData;
}

<style>
    .summary-container {
        text-align: center;
    }

        .summary-container h2 {
            margin-top: 20px;
        }

    .card-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 20px;
        margin-top: 20px;
    }

    .card {
        position: relative;
        width: 200px;
        height: 150px;
        background: #fff;
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: transform 0.3s;
    }

        .card:hover {
            transform: translateY(-10px);
        }

    .card-header {
        background-color: #4CAF50;
        padding: 10px;
        border-top-left-radius: 15px;
        border-top-right-radius: 15px;
    }

    .card-content {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        padding: 15px;
        background: rgba(255, 255, 255, 0.9);
        border-bottom-left-radius: 15px;
        border-bottom-right-radius: 15px;
        transition: background 0.3s;
    }

    .card:hover .card-content {
        background: rgba(255, 255, 255, 0.7);
    }

    .card-title {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 5px;
        color: #fff;
    }

    .card-value {
        font-size: 24px;
        color: #333;
    }

    .total-revenue {
        background-color: #4CAF50;
    }

    .total-approved-orders {
        background-color: #2196F3;
    }

    .total-pending-orders {
        background-color: #FFC107;
    }

    .total-cancelled-orders {
        background-color: #F44336;
    }

    .total-unpaid-orders {
        background-color: #FF9800;
    }

    .revenue-section {
        margin-top: 30px;
    }

        .revenue-section h3 {
            margin-bottom: 20px;
        }

    .revenue-list {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .revenue-item {
        background: #f9f9f9;
        padding: 10px 20px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin-bottom: 10px;
        width: 80%;
        display: flex;
        justify-content: space-between;
    }

        .revenue-item span {
            font-size: 18px;
            font-weight: bold;
        }

    canvas {
        max-width: 100%;
    }
</style>

<div class="summary-container">
    <h2>Quản lý doanh thu</h2>
</div>

<div class="card-container">
    <div class="card total-revenue">
        <div class="card-header">
            <h3 class="card-title">Tổng doanh thu</h3>
        </div>
        <div class="card-content">
            @{
                string formattedRevenue = string.Format("{0:#,##0}", ViewBag.TotalRevenue);
            }
            <p class="card-value">@formattedRevenue đ</p>
        </div>
    </div>
    <div class="card total-approved-orders">
        <div class="card-header" style="background-color: #2196F3;">
            <h3 class="card-title">Tổng đơn hàng đã được duyệt</h3>
        </div>
        <div class="card-content">
            <p class="card-value">@ViewBag.TotalApprovedOrders</p>
        </div>
    </div>
    <div class="card total-pending-orders">
        <div class="card-header" style="background-color: #FFC107;">
            <h3 class="card-title">Tổng đơn hàng cần xử lý</h3>
        </div>
        <div class="card-content">
            <p class="card-value">@ViewBag.TotalPendingOrders</p>
        </div>
    </div>
    <div class="card total-cancelled-orders">
        <div class="card-header" style="background-color: #F44336;">
            <h3 class="card-title">Tổng đơn hàng đã hủy</h3>
        </div>
        <div class="card-content">
            <p class="card-value">@ViewBag.TotalCancelledOrders</p>
        </div>
    </div>
</div>

<div class="revenue-section">
    <h3>Doanh thu theo ngày</h3>
    <div>
        <canvas id="dailyRevenueChart"></canvas>
    </div>
</div>

<div class="revenue-section">
    <h3>Doanh thu theo tháng</h3>
    <div>
        <canvas id="monthlyRevenueChart"></canvas>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Doanh thu theo ngày
            var dailyRevenueCtx = document.getElementById('dailyRevenueChart').getContext('2d');
            var dailyRevenueChart = new Chart(dailyRevenueCtx, {
                type: 'bar',
                data: {
                    labels: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(dailyRevenueLabels)),
                    datasets: [{
                        label: 'Doanh thu theo ngày',
                        data: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(dailyRevenueData)),
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1,
                        fill: true
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // Doanh thu theo tháng
            var monthlyRevenueCtx = document.getElementById('monthlyRevenueChart').getContext('2d');
            var monthlyRevenueChart = new Chart(monthlyRevenueCtx, {
                type: 'bar',
                data: {
                    labels: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(monthlyRevenueLabels)),
                    datasets: [{
                        label: 'Doanh thu theo tháng',
                        data: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(monthlyRevenueData)),
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderColor: 'rgba(153, 102, 255, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        });
    </script>
}
